import validator from "validator";
const mongoose = require("mongoose");

const userSchema = mongoose.Schema({
  name: {
    type: String,
    minLength: [4, "Name is too short."],
    maxLength: [15, "Name is too long."],
    trim: true,
  },
  username: {
    type: String,
    requied: [true, "Username is required."],
    unique: true,
    trim: true,
    minLength: [4, "Username is too short."],
    maxLength: [12, "Username is too long."],
  },
  email: {
    type: String,
    required: [true, "Email is required."],
    unique: true,
    validate: [validator.isEmail, "Enter a valid Email."],
  },
  password: {
    type: String,
    required: [true, "Password is required."],
    validate: [validator.isMD5, "Password is not valid."],
  },
  image: {
    type: String,
    default: `https://avatars.dicebear.com/api/adventurer-neutral/${}.svg`
    //TODO : Store the image url with the unique id generated by mongodb after the document has been saved.
  },
  bio: {
    type: String,
    default: "Doing something exciting...",
    maxLength: [50, "Maximum word limit is 50."],
  },
});

const personDetails = mongoose.Schema({
  username: {
    type: String,
  },
  name: {
    type: String
  },
  image : {
    type: String
  },
  id: {
    type : mongoose.Types.ObjectId
  }
},{_id:false})

const postSchema = mongoose.Schema({
  authorDetaile : personDetails,
  title : {
    type: String,
    required: [true, "Title is required."],
    unique: true,
    trim: true,
    maxLength: 30
  }, 
  image : {
    type: String,
  }
})

const users = mongoose.model("users", userSchema);
const posts = mongoose.model("posts", userSchema);
const userModel = mongoose.model("users", userSchema);

export { users, posts };
